{"version":3,"file":"static/js/517.9adab55f.chunk.js","mappings":"sSAGaA,EAAWC,EAAAA,GAAAA,GAAH,0CAIRC,EAAWD,EAAAA,GAAAA,GAAH,8CAIRE,EAAUF,EAAAA,GAAAA,IAAH,sDAKPG,EAAYH,EAAAA,GAAAA,EAAH,2EAETI,EAAAA,EAAAA,UAAAA,QAIAC,EAAcL,EAAAA,GAAAA,EAAH,iFAEXI,EAAAA,EAAAA,UAAAA,OAIAE,EAAYN,EAAAA,GAAAA,KAAH,8C,SCUtB,EAhCa,WACT,OAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,QAcP,OAZAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,8GAESC,EAAAA,EAAAA,IAAeC,OAAOL,IAF/B,cAEPM,EAFO,yBAGNP,EAAQO,EAAQC,OAAS,EAAID,EAAU,KAHjC,gCAKbE,QAAQC,IAAR,MALa,yDAAH,qDAQlBN,GACH,GAAE,CAACH,KAGA,SAACX,EAAD,UACKS,GAAQA,EAAKY,KAAI,YAA2D,IAAxDC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAClDC,EAAOF,EAAY,yCAAqCA,GAAiBG,EAC/E,OACI,UAAC1B,EAAD,YACI,SAACC,EAAD,CAAS0B,IAAKF,EAAMG,IAAKP,KACzB,SAACnB,EAAD,UAAYoB,KACZ,UAAClB,EAAD,0BAAwB,SAACC,EAAD,UAAYmB,SAHzBJ,EAMtB,KAGZ,C","sources":["components/cast/Cast.styled.js","components/cast/Cast.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { theme } from '../../styles';\n\nexport const CastList = styled.ul`\npadding: 20px 0;\n`;\n\nexport const CastItem = styled.li`\nmargin-bottom: 20px;\n`;\n\nexport const Portret = styled.img`\nwidth: 75px;\nheight: 120px;\n`;\n\nexport const CastTitle = styled.p`\nmargin: 8px 0;\nfont-size: ${theme.fontSizes.medium};\nfont-weight: 500;\n`;\n\nexport const CastContent = styled.p`\ntext-align: justify;\nfont-size: ${theme.fontSizes.small};\nfont-weight: 500;\n`;\n\nexport const Character = styled.span`\nfont-weight: normal;\n`;","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../api';\nimport defaultPhoto from '../../images/nophoto.jpg';\nimport { CastList, CastItem, Portret, CastTitle, CastContent, Character } from './Cast.styled';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n        const getFetchCast = async () => {\n            try {\n                const newCast = await fetchMovieCast(Number(movieId));\n                return setCast(newCast.length > 0 ? newCast : []);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n        getFetchCast();\n    }, [movieId]);\n\n    return (\n        <CastList>\n            {cast && cast.map(({ id, name, original_name, profile_path, character }) => {\n                const path = profile_path ? `https://image.tmdb.org/t/p/w45/${profile_path}` : defaultPhoto;\n                return (\n                    <CastItem key={id}>\n                        <Portret src={path} alt={name} />\n                        <CastTitle>{original_name}</CastTitle>\n                        <CastContent>Character: <Character>{character}</Character></CastContent>\n                    </CastItem>\n                );\n            })}\n        </CastList>\n    );\n};\n\nexport default Cast;"],"names":["CastList","styled","CastItem","Portret","CastTitle","theme","CastContent","Character","useState","cast","setCast","movieId","useParams","useEffect","getFetchCast","fetchMovieCast","Number","newCast","length","console","log","map","id","name","original_name","profile_path","character","path","defaultPhoto","src","alt"],"sourceRoot":""}